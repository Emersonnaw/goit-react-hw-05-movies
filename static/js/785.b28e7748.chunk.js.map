{"version":3,"file":"static/js/785.b28e7748.chunk.js","mappings":"oPAwCA,UAlCgB,WACZ,OAAoCA,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACNC,EAAaH,EAChB,GAAC,CAACA,IAEH,IAAMG,EAAY,mCAAG,WAAOH,GAAP,iGAEMI,EAAAA,EAAAA,IAAeJ,GAFrB,OAEPK,EAFO,OAGbN,EAAcM,EAAKA,KAAKC,SAHX,gDAKbC,EAAAA,GAAAA,MAAA,4CAAiD,CACrDC,SAAU,YACVC,UAAW,IACXC,MAAO,YARU,yDAAH,sDAalB,OACI,8BAC2B,IAAtBZ,EAAWa,OAAeb,EAAWc,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,GAAIC,EAAf,EAAeA,QAAf,OACtC,4BACK,0BAAI,WAASF,MAClB,uBAAIE,MAFMD,EAD4B,KAKjC,wBAAI,+CAIxB,C,2NCnCKE,G,QAAW,gCACXC,EAAU,mCACVC,EAAiB,mBACjBC,EAAoB,gBACpBC,EAAY,eACJC,EAAsB,mCAG7B,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oFACiB,MADjB,SAEcC,EAAAA,EAAAA,IAAA,UAAaP,GAAb,OAAwBE,GAAxB,OADG,MACH,oBAAgED,IAF9E,0GAMA,SAAeO,EAAtB,kC,aAAO,O,oBAAA,WAA8BC,GAA9B,uEACU,UADV,SAEcF,EAAAA,EAAAA,IAAA,UAAaP,GAAb,OAAwBG,EAAxB,oBAAqDF,EAArD,kBAAsEQ,EAAtE,+BAAkGL,GAAlG,OADJ,YADV,0GAMA,SAAeM,EAAtB,kC,aAAO,O,oBAAA,WAAyBZ,GAAzB,iFACcS,EAAAA,EAAAA,IAAA,UAAaP,EAAb,kBAA+BF,EAA/B,oBAA6CG,GAA7C,OAAuDG,IADrE,0GAMA,SAAeO,EAAtB,kC,aAAO,O,oBAAA,WAA2Bb,GAA3B,iFACcS,EAAAA,EAAAA,IAAA,UAAaP,EAAb,kBAA+BF,EAA/B,4BAAqDG,GAArD,OAA+DG,IAD7E,0GAKA,SAAehB,EAAtB,+CAAO,OAAP,oBAAO,WAA8BU,GAA9B,iFACcS,EAAAA,EAAAA,IAAA,UAAaP,EAAb,kBAA+BF,EAA/B,4BAAqDG,GAArD,OAA+DG,IAD7E,0G","sources":["components/Reviews/Reviews.js","components/Services/Api.js"],"sourcesContent":["import { useState, useEffect} from \"react\";\nimport { useParams} from \"react-router-dom\";\nimport { FetchByReviews } from \"components/Services/Api\";\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Reviews = () => {\n    const [reviewList, setReviewList] = useState([]);\n    const { movieId } = useParams();\n   \n    useEffect(() => {\n        fetchReviews(movieId)\n    },[movieId] );\n   \n    const fetchReviews = async (movieId) => {\n        try {\n            const data = await FetchByReviews(movieId);\n            setReviewList(data.data.results);\n        } catch (error) {\n            toast.error(` Something were wrong -\"${error}\"`, {\n        position: 'top-right',\n        autoClose: 3000,\n        theme: 'colored',\n      });\n     }\n }\n\n    return (\n        <>\n            {reviewList.length !== 0 ? reviewList.map(({ author, id, content }) => (\n                <div key={id}>\n                     <h5>Author: {author}</h5>\n                <p>{content}</p>\n               </div>\n                )) : <h5>We don't have any reviews for this movie.</h5>\n               }\n        </>\n    );\n}\n\nexport default Reviews;\n","import axios from \"axios\";\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst BASE_URL = 'https://api.themoviedb.org/3'; \nconst API_KEY = 'db1df0c9565c427084a8440ce91f6639';\nconst TRENDING_MOVIE = '/trending/movie/';\nconst SEARCH_BY_KEYWORD = '/search/movie';\nconst languages = '&language=en';\n export const firstPeaceOfImgTrip = 'https://image.tmdb.org/t/p/w500/';\n\n//example https://api.themoviedb.org/3/trending/movie/day?api_key=db1df0c9565c427084a8440ce91f6639\nexport async function FetchPopularMovies() {\n    const time_window = 'day'; // or week\n        return await axios.get(`${BASE_URL}${TRENDING_MOVIE}${time_window}?api_key=${API_KEY}`); \n};\n\n//example 'https://api.themoviedb.org/3/search/movie?query=car&include_adult=false&language=${}&page=1'\nexport async function FetchByKeyword(query) { \n    const page = '&page=1';\n        return await axios.get(`${BASE_URL}${SEARCH_BY_KEYWORD}?api_key=${API_KEY}&query=${query}&include_adult=false${languages}${page}`)  \n} \n\n//example 'https://api.themoviedb.org/3/movie/100287?language=en-US&api_key=db1df0c9565c427084a8440ce91f6639'\nexport async function FetchById(id) {\n        return await axios.get(`${BASE_URL}/movie/${id}?api_key=${API_KEY}${languages}`);  \n}\n    \n//'https://api.themoviedb.org/3/movie/569094/credits?language=en-US'\n\nexport async function FetchByCast(id) {\n        return await axios.get(`${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}${languages}`); \n}\n\n//example https://api.themoviedb.org/3/movie/1765227/reviews?language=en-US&page=1\nexport async function FetchByReviews(id) {\n        return await axios.get(`${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}${languages}`); \n}\n\n\n"],"names":["useState","reviewList","setReviewList","movieId","useParams","useEffect","fetchReviews","FetchByReviews","data","results","toast","position","autoClose","theme","length","map","author","id","content","BASE_URL","API_KEY","TRENDING_MOVIE","SEARCH_BY_KEYWORD","languages","firstPeaceOfImgTrip","FetchPopularMovies","axios","FetchByKeyword","query","FetchById","FetchByCast"],"sourceRoot":""}