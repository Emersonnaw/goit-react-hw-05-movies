{"version":3,"file":"static/js/219.3ef628cc.chunk.js","mappings":"2UAGMA,G,QAAW,gCACXC,EAAU,mCACVC,EAAiB,mBACjBC,EAAoB,gBACpBC,EAAY,eACJC,EAAsB,mCAG7B,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oFACiB,MADjB,SAEcC,EAAAA,EAAAA,IAAA,UAAaP,GAAb,OAAwBE,GAAxB,OADG,MACH,oBAAgED,IAF9E,0GAMA,SAAeO,EAAtB,kC,aAAO,O,oBAAA,WAA8BC,GAA9B,uEACU,UADV,SAEcF,EAAAA,EAAAA,IAAA,UAAaP,GAAb,OAAwBG,EAAxB,oBAAqDF,EAArD,kBAAsEQ,EAAtE,+BAAkGL,GAAlG,OADJ,YADV,0GAMA,SAAeM,EAAtB,kC,aAAO,O,oBAAA,WAAyBC,GAAzB,iFACcJ,EAAAA,EAAAA,IAAA,UAAaP,EAAb,kBAA+BW,EAA/B,oBAA6CV,GAA7C,OAAuDG,IADrE,0GAMA,SAAeQ,EAAtB,kC,aAAO,O,oBAAA,WAA2BD,GAA3B,iFACcJ,EAAAA,EAAAA,IAAA,UAAaP,EAAb,kBAA+BW,EAA/B,4BAAqDV,GAArD,OAA+DG,IAD7E,0GAKA,SAAeS,EAAtB,+CAAO,OAAP,oBAAO,WAA8BF,GAA9B,iFACcJ,EAAAA,EAAAA,IAAA,UAAaP,EAAb,kBAA+BW,EAA/B,4BAAqDV,GAArD,OAA+DG,IAD7E,0G,wKC/BMU,EAAKC,EAAAA,EAAAA,GAAH,4SAaFC,EAAMD,EAAAA,EAAAA,IAAH,qDAKHE,EAAaF,EAAAA,EAAAA,IAAH,yHASVG,EAAOH,EAAAA,EAAAA,KAAH,iK,SCajB,EArCa,WACT,OAAsCI,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,MACAC,EAAAA,EAAAA,YAAU,WACNC,EAAUL,EACb,GAAC,CAACA,IAEH,IAAMK,EAAS,mCAAG,WAAOL,GAAP,uFAEVG,EAAS,MAFC,UAGSb,EAAAA,EAAAA,IAAYU,GAHrB,OAGJM,EAHI,OAIVP,EAAeO,EAAKA,KAAKC,MAJf,gDAMVJ,EAAS,EAAD,IANE,yDAAH,sDAUf,OACI,8BACKD,GAAQ,yBAAIA,EAAM,QACf,+BACA,SAACV,EAAD,UACwB,IAAvBM,EAAYU,OAAeV,EAAYW,KAAI,gBAAEpB,EAAF,EAAEA,GAAIqB,EAAN,EAAMA,KAAMC,EAAZ,EAAYA,UAAWC,EAAvB,EAAuBA,aAAvB,OACxC,0BACCA,GAAe,SAAClB,EAAD,CAAKmB,IAAG,UAAK9B,EAAAA,IAAL,OAA2B6B,GAAgBE,IAAKJ,KAAW,SAACf,EAAD,WAAY,SAACC,EAAD,UAAOc,OAClG,wBAAKA,KACL,yBAAG,cAAYC,OAHVtB,EAD+B,KAMvC,wBAAI,iCAMxB,C","sources":["Services/Api.js","components/Cast/Cast.styled.js","components/Cast/Cast.js"],"sourcesContent":["import axios from \"axios\";\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst BASE_URL = 'https://api.themoviedb.org/3'; \nconst API_KEY = 'db1df0c9565c427084a8440ce91f6639';\nconst TRENDING_MOVIE = '/trending/movie/';\nconst SEARCH_BY_KEYWORD = '/search/movie';\nconst languages = '&language=en';\n export const firstPeaceOfImgTrip = 'https://image.tmdb.org/t/p/w500/';\n\n//example https://api.themoviedb.org/3/trending/movie/day?api_key=db1df0c9565c427084a8440ce91f6639\nexport async function FetchPopularMovies() {\n    const time_window = 'day'; // or week\n        return await axios.get(`${BASE_URL}${TRENDING_MOVIE}${time_window}?api_key=${API_KEY}`); \n};\n\n//example 'https://api.themoviedb.org/3/search/movie?query=car&include_adult=false&language=${}&page=1'\nexport async function FetchByKeyword(query) { \n    const page = '&page=1';\n        return await axios.get(`${BASE_URL}${SEARCH_BY_KEYWORD}?api_key=${API_KEY}&query=${query}&include_adult=false${languages}${page}`)  \n} \n\n//example 'https://api.themoviedb.org/3/movie/100287?language=en-US&api_key=db1df0c9565c427084a8440ce91f6639'\nexport async function FetchById(id) {\n        return await axios.get(`${BASE_URL}/movie/${id}?api_key=${API_KEY}${languages}`);  \n}\n    \n//'https://api.themoviedb.org/3/movie/569094/credits?language=en-US'\n\nexport async function FetchByCast(id) {\n        return await axios.get(`${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}${languages}`); \n}\n\n//example https://api.themoviedb.org/3/movie/1765227/reviews?language=en-US&page=1\nexport async function FetchByReviews(id) {\n        return await axios.get(`${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}${languages}`); \n}\n\n\n","import styled from '@emotion/styled';\n\n\nexport const Ul = styled.ul`\n    display: grid;\n    max-width: calc(100vw - 48px);\n    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n    grid-gap: 16px;\n    margin-top: 0;\n    margin-bottom: 0;\n    padding: 0;\n    list-style: none;\n    margin-left: auto;\n    margin-right: auto;\n`;\n\nexport const Img = styled.img`\ndisplay:block;\nwidth:80px;\n`;\n\nexport const DivWrapper = styled.div`\n display: block;\nposition: relative;\n\n width:80px;\nheight:120px;\nbackground-color:#B0C4DE;\n`;\n\nexport const Span = styled.span`\ndispaly: block;\nposition: absolute;\ntop:50%;\nleft:50%;\n transform: translate(-50%, -50%);\n font-family: serif;\n \n\n color:white;\n`;\n","import { useState, useEffect} from \"react\";\nimport { useParams} from \"react-router-dom\";\nimport { FetchByCast,firstPeaceOfImgTrip } from \"Services/Api\";\nimport {Img, Ul, DivWrapper, Span} from './Cast.styled'\n\n\nconst Cast = () => {\n    const [actorsProps, setActorsProps] = useState([]);\n    const { movieId } = useParams();\n    const [error, setError] = useState(null);\n    useEffect(() => {\n        fetchCast(movieId)\n    },[movieId] );\n   \n    const fetchCast = async (movieId) => {\n        try {\n            setError(null);\n            const data = await FetchByCast(movieId);\n            setActorsProps(data.data.cast);\n        } catch (error) {\n            setError(error);\n     }\n }\n  \n    return (\n        <>\n            {error ? <p>{error} </p> :\n                <>\n                <Ul>\n                {actorsProps.length !== 0 ? actorsProps.map(({id, name, character, profile_path }) => (\n                    <li key={id}>\n                    {profile_path ? <Img src={`${firstPeaceOfImgTrip}${profile_path}`} alt={name} /> : <DivWrapper><Span>{name}</Span></DivWrapper>}\n                        <h5>{name}</h5>\n                        <p>Character: {character}</p>\n                    </li>\n                )) : <h5>We don't have any cast.</h5>}\n                    </Ul>\n                </>\n            }\n        </>\n    );\n}\n\nexport default Cast;\n"],"names":["BASE_URL","API_KEY","TRENDING_MOVIE","SEARCH_BY_KEYWORD","languages","firstPeaceOfImgTrip","FetchPopularMovies","axios","FetchByKeyword","query","FetchById","id","FetchByCast","FetchByReviews","Ul","styled","Img","DivWrapper","Span","useState","actorsProps","setActorsProps","movieId","useParams","error","setError","useEffect","fetchCast","data","cast","length","map","name","character","profile_path","src","alt"],"sourceRoot":""}