{"version":3,"file":"static/js/201.30b80fa7.chunk.js","mappings":"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","sources":["components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.js","Pages/Movies/Movies.styled.js","Pages/Movies/Movies.js","Services/Api.js","components/Loader/Loader.styled.js","components/Loader/Loader.js","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport {Form, Field} from 'formik';\n\nexport const Header = styled.header`\n    top: 0;\n    left: 0;\n    position: sticky;\n    z-index: 1100;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    min-height: 64px;\n    padding-right: 24px;\n    padding-left: 24px;\n    padding-top: 12px;\n    padding-bottom: 12px;\n    color: #fff;\n    background-color: #3f51b5;\n    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n        0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const FormCastom = styled(Form)`\n    display: flex;\n    align-items: center;\n    width: 100%;\n    max-width: 600px;\n    background-color: #fff;\n    border-radius: 3px;\n    overflow: hidden;\n    \n`;\n\nexport const Button = styled.button`\n     display: block;\n    padding: 6px;\n    margin-right:15px;\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n   border-radius: 4px;\n    cursor: pointer;\n    outline: none;\n    border:none;\n\n  // &:active {\n  //   color: white;\n  //   background-color: #3498db;\n  // }\n   &:hover {\n    \n    color: white;\n    background-color: #00afd1;\n  }\n`;\n\n\nexport const FieldCastom = styled(Field)`\n    display: inline-block;\n    margin-right:5px;\n    width: 40%;\n    height: 25px;\n    font: inherit;\n    font-size: 15px;\n    border-radius: 4px;\n    border: 1px solid #999;\n    font-family: Georgia, serif;\n    font-weight:500;\n    \n    outline: none;\n    padding-left: 10px;\n    padding-right: 4px;\n    &::placeholder {\n    padding-left:5px;\n    font: inherit;\n    font-size: 16px;\n    font-family: cursive;\n    }\n    &:hover {\n    border-color: #00afd1;\n    }\n`;\n","import PropTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport { Formik, ErrorMessage } from 'formik';\nimport { toast } from 'react-toastify';\nimport { FormCastom, Button,FieldCastom } from './SearchForm.styled';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst SearchForm = ({ onFormData }) => { \n    const schema = Yup.object().shape({\n        search: Yup.string().min(2, 'Too Short!')\n        .max(50, 'Too Long!')\n    });\n    \n    let initialValue = {\n    search:''\n};\n    \n    const handleSubmit = ({ search }, { resetForm }) => {\n        if (search.trim() === '') {\n            toast.error(`Request cannot contain an empty string`, {\n                    position: \"top-right\",\n                    autoClose: 3000,\n                    theme: \"colored\",\n            });  \n            return;\n        }\n\n    onFormData(search.toLowerCase());\n        resetForm();\n    }\n    return (\n            <Formik initialValues={initialValue} validationSchema={schema} onSubmit={handleSubmit}>\n                <FormCastom >\n                    <FieldCastom\n                        autoFocus\n                        type=\"text\"\n                        name=\"search\"\n                        placeholder=\"Input your query\"\n                />\n                <Button type=\"submit\" > Search</Button>\n                <ErrorMessage name='search' component=\"div\"/>\n                </FormCastom>\n            </Formik>\n    );\n}\n\nSearchForm.propTypes = {\n    onFormData: PropTypes.func.isRequired\n};\n\n export default SearchForm;","import styled from '@emotion/styled';\n\nexport const Div = styled.div`\nmargin-bottom: 25px;\n`;","import { useState, useEffect } from 'react';\nimport {useSearchParams } from \"react-router-dom\";\nimport { FetchByKeyword } from 'Services/Api';\nimport Loader from 'components/Loader/Loader';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport MovieList from 'components/MovieList/MovieList';\nimport { toast } from 'react-toastify';\nimport {Div} from './Movies.styled'\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Movies = () => {\n    const [searchParams, setSearchParams] = useSearchParams();\n    \n    const [searchQuery, setSearchQuery] = useState(searchParams.get(\"q\") ?? '');\n    const [seacrchBySet, setSeacrchBySet] = useState([]);\n    const [loader, setLoader] = useState(false);\n    const [error, setError] = useState(null);\n    useEffect(() => {\n        if (!searchQuery) {\n            return;\n        }\n        SearchByWord(searchQuery);\n    }, [searchQuery]);\n    \n\n    const SearchByWord = async (query) => {\n        try {\n            setError(null);\n            setLoader(true);\n            const newQuery = await FetchByKeyword(query);\n            if (newQuery.data.results.length === 0) {\n                setLoader(false);\n                toast.error(`\"${newQuery.data.results}\" no match for this word `, {\n        position: 'top-right',\n        autoClose: 5000,\n        theme: 'colored',\n                });\n                setSeacrchBySet([]);\n                return;\n            }\n            setLoader(false);\n            setSeacrchBySet(newQuery.data.results);\n        } catch (error) {\n             setLoader(false);\n            setError(error);\n        }\n\n    }\n\n    const onFormData = (value) => {\n        setSearchParams({q: value});\n        setSearchQuery(value);   \n    };\n\n    return (\n        <>\n            <Div>\n                <SearchForm onFormData={onFormData} />\n            </Div>\n            {loader && <Loader />}\n            {error && <h2>{ error}</h2>}\n            {seacrchBySet.length > 0 && <MovieList List={seacrchBySet} />}   \n        </>\n    );\n}\n\n\nexport default Movies;","import axios from \"axios\";\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst BASE_URL = 'https://api.themoviedb.org/3'; \nconst API_KEY = 'db1df0c9565c427084a8440ce91f6639';\nconst TRENDING_MOVIE = '/trending/movie/';\nconst SEARCH_BY_KEYWORD = '/search/movie';\nconst languages = '&language=en';\n export const firstPeaceOfImgTrip = 'https://image.tmdb.org/t/p/w500/';\n\n//example https://api.themoviedb.org/3/trending/movie/day?api_key=db1df0c9565c427084a8440ce91f6639\nexport async function FetchPopularMovies() {\n    const time_window = 'day'; // or week\n        return await axios.get(`${BASE_URL}${TRENDING_MOVIE}${time_window}?api_key=${API_KEY}`); \n};\n\n//example 'https://api.themoviedb.org/3/search/movie?query=car&include_adult=false&language=${}&page=1'\nexport async function FetchByKeyword(query) { \n    const page = '&page=1';\n        return await axios.get(`${BASE_URL}${SEARCH_BY_KEYWORD}?api_key=${API_KEY}&query=${query}&include_adult=false${languages}${page}`)  \n} \n\n//example 'https://api.themoviedb.org/3/movie/100287?language=en-US&api_key=db1df0c9565c427084a8440ce91f6639'\nexport async function FetchById(id) {\n        return await axios.get(`${BASE_URL}/movie/${id}?api_key=${API_KEY}${languages}`);  \n}\n    \n//'https://api.themoviedb.org/3/movie/569094/credits?language=en-US'\n\nexport async function FetchByCast(id) {\n        return await axios.get(`${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}${languages}`); \n}\n\n//example https://api.themoviedb.org/3/movie/1765227/reviews?language=en-US&page=1\nexport async function FetchByReviews(id) {\n        return await axios.get(`${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}${languages}`); \n}\n\n\n","import styled from '@emotion/styled';\n\nexport const Div = styled.div`\n\n\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: flex-start;\n   \n`;","import { ThreeDots } from 'react-loader-spinner';\nimport { Div } from './Loader.styled';\n\nconst  Loader = () => {\n    return (\n        <Div>\n           <ThreeDots \nheight=\"80\" \nwidth=\"80\" \nradius=\"9\"\ncolor=\"#4fa94d\" \nariaLabel=\"three-dots-loading\"\nwrapperStyle={{}}\nwrapperClassName=\"\"\nvisible={true}\n />\n\n        </Div>\n    )\n}\n\nexport default Loader","import styled from '@emotion/styled';\nimport { Link } from \"react-router-dom\";\n\n\nexport const LinkStile = styled(Link)`\ntext-decoration:none;\n`;\n\n\n\nexport const Container = styled.div`\ndisplay:flex;\n\nbox-shadow: 0 1px 4px rgba(0, 0, 0, .3),\n            -23px 0 20px -23px rgba(0, 0, 0, .6),\n            23px 0 20px -23px rgba(0, 0, 0, .6),\n            inset 0 0 40px rgba(0, 0, 0, .1);\n`;\n\n\nexport const Ul = styled.ul`\n    display: grid;\n    max-width: calc(100vw - 48px);\n    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n    grid-gap: 16px;\n    margin-top: 0;\n    margin-bottom: 0;\n    padding: 0;\n    list-style: none;\n    margin-left: auto;\n    margin-right: auto;\n`;\n\nexport const Img = styled.img`\ndisplay:block;\nwidth:220px;\nheight: 330px;\nobject-fit: contain;\n`;\n\nexport const DivWrapper = styled.div`\ndisplay:inline-block;\nposition: relative;\nwidth:220px;\nheight:330px;\nbackground-color:#B0C4DE;\n`;\n\nexport const Span = styled.span`\ndispaly: block;\nposition: absolute;\ntop:50%;\nleft:50%;\n transform: translate(-50%, -50%);\n font-family: serif;\n font-size:24px;\n\n color:white;\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from \"react-router-dom\";\nimport { firstPeaceOfImgTrip } from 'Services/Api';\nimport {Ul, Img, LinkStile} from './MovieList.styled'\nimport defaultImage from 'components/images/No photo.png';\nconst MovieList = ({ List }) => {\n\n    const location = useLocation();\n    \n    return (\n        <div>\n            <Ul>\n                {List.map(({ id, title,poster_path }) => (\n                    <li key={id}>\n                        <LinkStile to={`/movies/${id}`} state={{from:location}} >\n                            {poster_path  ? <Img src={`${firstPeaceOfImgTrip}${poster_path}`} alt='' /> : <Img src={defaultImage} alt='' />}\n                            <span>{title}</span>\n                        </LinkStile>\n                    </li>\n                ))}\n            </Ul>\n        </div>\n    )\n};\nexport default MovieList;\n\nMovieList.propTypes = {\n    List: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        title: PropTypes.string.isRequired,\n        poster_path: PropTypes.string\n    }))\n};\n"],"names":["FormCastom","styled","Form","Button","FieldCastom","Field","onFormData","schema","Yup","shape","search","min","max","initialValues","validationSchema","onSubmit","resetForm","trim","toLowerCase","toast","position","autoClose","theme","autoFocus","type","name","placeholder","component","Div","useSearchParams","searchParams","setSearchParams","useState","get","searchQuery","setSearchQuery","seacrchBySet","setSeacrchBySet","loader","setLoader","error","setError","useEffect","SearchByWord","query","FetchByKeyword","newQuery","data","results","length","value","q","Loader","MovieList","List","BASE_URL","API_KEY","TRENDING_MOVIE","SEARCH_BY_KEYWORD","languages","firstPeaceOfImgTrip","FetchPopularMovies","axios","FetchById","id","FetchByCast","FetchByReviews","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","LinkStile","Link","Ul","Img","location","useLocation","map","title","poster_path","to","state","from","src","alt","defaultImage"],"sourceRoot":""}